#Windows makefile test project settings

BUILD_DIR = ../projects_build/$(BUILD_NAME)

#Name of the destination application!
TARGET = $(BUILD_NAME).exe

#GProf switches!
GPROF_SWITCHES = -l

# ###################################################


#Our actual building script doing all the hard work:

#Our filenames of the targets (release and debug)!
TARGET_RELEASE = $(TARGET)
TARGET_DEBUG = dbg$(TARGET)
TARGET_PROFILE = prof$(TARGET)

#Programs
CC = gcc
RM = rm -f

WARNS = -Wall

INCLUDE_DIRS = -I. -I/mingw/include -I/mingw/include/SDL -I/mingw/lib

#Default optimization flags!
OPTIMIZATIONFLAGS = -O3

#Execute stripping if set below!
STRIP = -s

#Building for debugging optimization flags
ifneq (,$(findstring debug,$(MAKECMDGOALS)))
OPTIMIZATIONFLAGS = -Og
endif

#Building for debugger and normal CFLAGS
BUILD_CFLAGS = -enable-core-inline -static-libgcc -static-libstdc++
ifneq (,$(findstring debug,$(MAKECMDGOALS)))
BUILD_CFLAGS = -ggdb -ffunction-sections
endif

ifneq (,$(findstring profile,$(MAKECMDGOALS)))
BUILD_CFLAGS = -g -pg -ffunction-sections -enable-core-inline -static-libgcc -static-libstdc++
endif

#Different kinds of flags!
#Add -mno-ms-bitfields to fix broken bitfields and type sizes in MinGW.
CFLAGS = -std=c99 ${WARNS} -mno-ms-bitfields
LDFLAGS = -lmingw32 -lSDLmain -lSDL -lSDL_gfx

#Apply build directory etc.
BUILD_RELEASE = $(BUILD_DIR)/$(TARGET_RELEASE)
BUILD_DEBUG = $(BUILD_DIR)/$(TARGET_DEBUG)
BUILD_PROFILE = $(BUILD_DIR)/$(TARGET_PROFILE)
BUILD_PROFILE_GMON = $(BUILD_DIR)/gmon.out
BUILD_PROFILE_GMON_TXT = $(BUILD_DIR)/profiler.txt

OBJS := $(patsubst %.o,$(BUILD_DIR)/%.o,$(OBJS))

#Rules themselves!
#Build&debug command support!

build: $(BUILD_RELEASE)

profile: $(BUILD_PROFILE)

profile_use: $(BUILD_PROFILE)
	gprof $(GPROF_SWITCHES) $(BUILD_PROFILE) $(BUILD_PROFILE_GMON) > $(BUILD_PROFILE_GMON_TXT)

reprofile: clean profile	

#Run debugger now on the executable!
debug: $(BUILD_DEBUG)
	gdb -w --cd="$(BUILD_DIR)" --se="$(TARGET_DEBUG)"

redebug: clean debug

#Compile into debug mode without stripping (-s)!
$(BUILD_DEBUG): ${OBJS}
	${CC} -ggdb -o "$@" $(OBJS) -Wl,-gc-sections ${LDFLAGS}

$(BUILD_PROFILE): ${OBJS}
	${CC} -g -pg -o "$@" $(OBJS) -Wl,-gc-sections ${LDFLAGS}

#Compile into release mode with stripping (-s)!
$(BUILD_RELEASE): ${OBJS}
	${CC} -o "$@" ${OBJS} $(STRIP) ${LDFLAGS}

#Normal compilation of seperate modules!
$(BUILD_DIR)/%.o:%.c
	${CC} $(OPTIMIZATIONFLAGS) ${CFLAGS} $(BUILD_CFLAGS) ${INCLUDE_DIRS} -c $< -o $@