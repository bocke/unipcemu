#Define our building directory for all output files!
BUILD_DIR = ../../psp-projects_build/x86EMU

TARGET = eboot

#need prx to be able to run the exception handler!
#BUILD_PRX = 1
#atm. build_prx causes multithreading to fail?

#Enable large memory detection? Disabled during developing.
PSP_LARGE_MEMORY = 1

#Init for below:
CFLAGS = 
CXXFLAGS = 
LIBS = 
#optimization flags: Nothing: Debugging, -O3 normal operations.
OPTIMIZATIONFLAG = -O3
#OPTIMIZATIONFLAG = 

#Finally, everything PSP!

CFLAGS += $(OPTIMIZATIONFLAG) -G0

#SDL
CXXFLAGS += $(CFLAGS)
ASFLAGS = $(CFLAGS)
LIBS = -lpng -lz -lm -lstdc++
#PSPLIBS1 = -lpspgu -lpsppower -lpspdebugkb
PSPLIBS1 = -lpspdebugkb
#Audio
PSPLIBS1 += -lpspaudiolib -lpspaudio
#Timing/RTC
PSPLIBS1 += -lpsprtc

EXTRA_TARGETS = EBOOT.PBP
PSP_EBOOT_TITLE = x86EMU

#Turn this line off when using SDL!

#SDL Specific!
PSPBIN = $(PSPSDK)/../bin
#CFLAGS = $(shell $(PSPBIN)/sdl-config --cflags)
#LIBS += -lSDL  -lglut -lGLU -lGL -lc
#PSPLIBS2 = -lpsputility -lpspdebug -lpspge -lpspdisplay -lpspctrl -lpspsdk -lpspvfpu -lpsplibc -lpspuser -lpspkernel -lpsphprm -lpspirkeyb -lpsppower
PSPLIBS2 = -lSDL -lSDL_ttf -lSDL_image -lSDL_gfx -lpspirkeyb -lpspwlan -lpsppower -lGL -l freetype -ljpeg -lpng -lz -lm -lSDL -lpspgu -l psphprm -lpspaudio -lstdc++ -lpspvfpu -lpsprtc

#Link the final PSP libaries!
LIBS += $(PSPLIBS2) $(PSPLIBS1)

#PSP build path and compile script!
PSPSDK=$(shell psp-config --pspsdk-path)
include ../tools/build.mak